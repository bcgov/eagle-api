import groovy.json.JsonOutput
import groovy.json.JsonSlurper
import java.util.regex.Pattern

/*
 * Sends a rocket chat notification
 */
def notifyRocketChat(text, url) {
    def rocketChatURL = url
    def message = text.replaceAll(~/\'/, "")
    def payload = JsonOutput.toJson([
      "username":"Jenkins",
      "icon_url":"https://wiki.jenkins.io/download/attachments/2916393/headshot.png",
      "text": message
    ])

    sh("curl -X POST -H 'Content-Type: application/json' --data \'${payload}\' ${rocketChatURL}")
}

pipeline {
  agent any
  stages {
   stage('Tag Test as Prod'){
      agent any
      steps {
        script {
          ROCKET_DEPLOY_WEBHOOK = sh(returnStdout: true, script: 'cat rocket-deploy-webhook')
          ROCKET_QA_WEBHOOK = sh(returnStdout: true, script: 'cat rocket-qa-webhook')
          try {
            echo "Backing up..."
            sh("oc tag esm/eagle-api:prod esm/eagle-api:prod-backup")
            sleep 5
            echo "Tagging Test as Prod..."
            sh("oc tag esm/eagle-api:test esm/eagle-api:prod")
            sleep 5
            echo ">>>> Tagging Complete"
            notifyRocketChat(
              "eagle-api test has been tagged to prod",
              ROCKET_DEPLOY_WEBHOOK
            )
            notifyRocketChat(
              "@all eagle-api test has been tagged to prod",
              ROCKET_QA_WEBHOOK
            )
          } catch (error) {
            notifyRocketChat(
              "@all tagging test as prod has failed",
              ROCKET_DEPLOY_WEBHOOK
            )
            currentBuild.result = "FAILURE"
            throw new Exception("Deploy failed")
          }
        }
      }
    }
  }
}